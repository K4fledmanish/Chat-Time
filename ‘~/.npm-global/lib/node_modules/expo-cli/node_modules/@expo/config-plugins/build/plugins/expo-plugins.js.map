{"version":3,"file":"expo-plugins.js","sourceRoot":"","sources":["../../src/plugins/expo-plugins.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA,0DAA4C;AAC5C,kDAAoC;AACpC,iDAA6C;AAE7C;;;GAGG;AACU,QAAA,kBAAkB,GAG1B,CAAC,MAAM,EAAE,EAAE,gBAAgB,EAAE,YAAY,EAAE,EAAE,EAAE;IAClD,mCAAmC;IACnC,IAAI,CAAC,MAAM,CAAC,GAAG;QAAE,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC;IACjC,MAAM,CAAC,GAAG,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAE/C,OAAO,0BAAW,CAAC,MAAM,EAAE;QACzB,CAAC,SAAS,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,EAAE,gBAAgB,EAAE,CAAC;QACvE,SAAS,CAAC,MAAM,CAAC,UAAU;QAC3B,SAAS,CAAC,QAAQ,CAAC,YAAY;QAC/B,SAAS,CAAC,MAAM,CAAC,UAAU;QAC3B,SAAS,CAAC,IAAI,CAAC,eAAe;QAC9B,2BAA2B;QAC3B,SAAS,CAAC,WAAW,CAAC,eAAe;QACrC,SAAS,CAAC,kBAAkB,CAAC,sBAAsB;QACnD,SAAS,CAAC,MAAM,CAAC,UAAU;QAC3B,SAAS,CAAC,kBAAkB,CAAC,sBAAsB;QACnD,SAAS,CAAC,uBAAuB,CAAC,2BAA2B;QAC7D,SAAS,CAAC,OAAO,CAAC,eAAe;QACjC,SAAS,CAAC,OAAO,CAAC,WAAW;QAC7B,SAAS,CAAC,MAAM,CAAC,sBAAsB;QACvC,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,CAAC;QACjD,eAAe;QACf,SAAS,CAAC,YAAY,CAAC,0BAA0B;QACjD,SAAS,CAAC,YAAY,CAAC,wBAAwB;QAC/C,yEAAyE;QACzE,CAAC,SAAS,CAAC,YAAY,CAAC,qBAAqB,EAAE,EAAE,WAAW,EAAE,wBAAwB,EAAE,CAAC;QACzF,SAAS,CAAC,YAAY,CAAC,qBAAqB;QAC5C,eAAe;QACf,SAAS,CAAC,YAAY,CAAC,gBAAgB;QACvC,SAAS,CAAC,OAAO,CAAC,WAAW;QAC7B,YAAY;QACZ,SAAS,CAAC,KAAK,CAAC,SAAS;QACzB,SAAS,CAAC,YAAY,CAAC,gBAAgB;KACxC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACU,QAAA,sBAAsB,GAG9B,CAAC,MAAM,EAAE,EAA0B,EAAE,EAAE;QAA9B,EAAE,YAAY,OAAY,EAAV,oCAAQ;IACpC,sCAAsC;IACtC,IAAI,CAAC,MAAM,CAAC,OAAO;QAAE,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;IACzC,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IAEvC,OAAO,0BAAW,CAAC,MAAM,EAAE;QACzB,kBAAkB;QAClB,aAAa,CAAC,IAAI,CAAC,sBAAsB;QAEzC,uBAAuB;QACvB,aAAa,CAAC,cAAc,CAAC,aAAa;QAE1C,mBAAmB;QACnB,aAAa,CAAC,cAAc,CAAC,eAAe;QAC5C,aAAa,CAAC,OAAO,CAAC,iBAAiB;QACvC,aAAa,CAAC,OAAO,CAAC,WAAW;QAEjC,sBAAsB;QACtB,aAAa,CAAC,OAAO,CAAC,mBAAmB;QACzC,aAAa,CAAC,WAAW,CAAC,eAAe;QACzC,aAAa,CAAC,MAAM,CAAC,UAAU;QAC/B,aAAa,CAAC,WAAW,CAAC,eAAe;QACzC,aAAa,CAAC,WAAW,CAAC,eAAe;QACzC,aAAa,CAAC,MAAM,CAAC,UAAU;QAC/B,aAAa,CAAC,QAAQ,CAAC,oBAAoB;QAC3C,aAAa,CAAC,aAAa,CAAC,wBAAwB;QAEpD,aAAa,CAAC,kBAAkB,CAAC,kBAAkB;QACnD,aAAa,CAAC,eAAe,CAAC,yBAAyB;QACvD,aAAa,CAAC,gBAAgB,CAAC,oBAAoB;QACnD,aAAa,CAAC,aAAa,CAAC,wBAAwB;QACpD,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,CAAC;QAErD,iBAAiB;QACjB,aAAa,CAAC,kBAAkB,CAAC,sBAAsB;QAEvD,cAAc;QACd,aAAa,CAAC,IAAI,CAAC,QAAQ;QAC3B,aAAa,CAAC,QAAQ,CAAC,uBAAuB;QAE9C,mDAAmD;QACnD,aAAa,CAAC,cAAc,CAAC,sBAAsB;QAEnD,mCAAmC;QACnC,aAAa,CAAC,uBAAuB,CAAC,2BAA2B;QACjE,aAAa,CAAC,aAAa,CAAC,iBAAiB;QAC7C,aAAa,CAAC,SAAS,CAAC,aAAa;QACrC,aAAa,CAAC,YAAY,CAAC,gBAAgB;QAC3C,aAAa,CAAC,aAAa,CAAC,yBAAyB;QAErD,aAAa,CAAC,IAAI,CAAC,SAAS;QAC5B,aAAa,CAAC,aAAa,CAAC,qBAAqB;QACjD,yFAAyF;QACzF,gIAAgI;QAChI,aAAa,CAAC,OAAO,CAAC,mBAAmB;QACzC,aAAa,CAAC,YAAY,CAAC,gBAAgB;KAC5C,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["/**\n * These are the versioned first-party plugins with some of the future third-party plugins mixed in for legacy support.\n */\nimport { ConfigPlugin } from '../Plugin.types';\nimport * as AndroidConfig from '../android';\nimport * as IOSConfig from '../ios';\nimport { withPlugins } from './core-plugins';\n\n/**\n * Config plugin to apply all of the custom Expo iOS config plugins we support by default.\n * TODO: In the future most of this should go into versioned packages like expo-facebook, expo-updates, etc...\n */\nexport const withExpoIOSPlugins: ConfigPlugin<{\n  bundleIdentifier: string;\n  expoUsername: string | null;\n}> = (config, { bundleIdentifier, expoUsername }) => {\n  // Set the bundle ID ahead of time.\n  if (!config.ios) config.ios = {};\n  config.ios.bundleIdentifier = bundleIdentifier;\n\n  return withPlugins(config, [\n    [IOSConfig.BundleIdenitifer.withBundleIdentifier, { bundleIdentifier }],\n    IOSConfig.Branch.withBranch,\n    IOSConfig.Facebook.withFacebook,\n    IOSConfig.Google.withGoogle,\n    IOSConfig.Name.withDisplayName,\n    // IOSConfig.Name.withName,\n    IOSConfig.Orientation.withOrientation,\n    IOSConfig.RequiresFullScreen.withRequiresFullScreen,\n    IOSConfig.Scheme.withScheme,\n    IOSConfig.UserInterfaceStyle.withUserInterfaceStyle,\n    IOSConfig.UsesNonExemptEncryption.withUsesNonExemptEncryption,\n    IOSConfig.Version.withBuildNumber,\n    IOSConfig.Version.withVersion,\n    IOSConfig.Google.withGoogleServicesFile,\n    [IOSConfig.Updates.withUpdates, { expoUsername }],\n    // Entitlements\n    IOSConfig.Entitlements.withAppleSignInEntitlement,\n    IOSConfig.Entitlements.withAccessesContactNotes,\n    // TODO: We don't have a mechanism for getting the apple team id here yet\n    [IOSConfig.Entitlements.withICloudEntitlement, { appleTeamId: 'TODO-GET-APPLE-TEAM-ID' }],\n    IOSConfig.Entitlements.withAssociatedDomains,\n    // XcodeProject\n    IOSConfig.DeviceFamily.withDeviceFamily,\n    IOSConfig.Locales.withLocales,\n    // Dangerous\n    IOSConfig.Icons.withIcons,\n    IOSConfig.SplashScreen.withSplashScreen,\n  ]);\n};\n\n/**\n * Config plugin to apply all of the custom Expo Android config plugins we support by default.\n * TODO: In the future most of this should go into versioned packages like expo-facebook, expo-updates, etc...\n */\nexport const withExpoAndroidPlugins: ConfigPlugin<{\n  package: string;\n  expoUsername: string | null;\n}> = (config, { expoUsername, ...props }) => {\n  // Set the package name ahead of time.\n  if (!config.android) config.android = {};\n  config.android.package = props.package;\n\n  return withPlugins(config, [\n    // settings.gradle\n    AndroidConfig.Name.withNameSettingsGradle,\n\n    // project build.gradle\n    AndroidConfig.GoogleServices.withClassPath,\n\n    // app/build.gradle\n    AndroidConfig.GoogleServices.withApplyPlugin,\n    AndroidConfig.Package.withPackageGradle,\n    AndroidConfig.Version.withVersion,\n\n    // AndroidManifest.xml\n    AndroidConfig.Package.withPackageManifest,\n    AndroidConfig.AllowBackup.withAllowBackup,\n    AndroidConfig.Scheme.withScheme,\n    AndroidConfig.Orientation.withOrientation,\n    AndroidConfig.Permissions.withPermissions,\n    AndroidConfig.Branch.withBranch,\n    AndroidConfig.Facebook.withFacebookManifest,\n    AndroidConfig.Notifications.withNotificationManifest,\n\n    AndroidConfig.UserInterfaceStyle.withUiModeManifest,\n    AndroidConfig.GoogleMobileAds.withGoogleMobileAdsConfig,\n    AndroidConfig.GoogleMapsApiKey.withGoogleMapsApiKey,\n    AndroidConfig.IntentFilters.withAndroidIntentFilters,\n    [AndroidConfig.Updates.withUpdates, { expoUsername }],\n\n    // MainActivity.*\n    AndroidConfig.UserInterfaceStyle.withUiModeMainActivity,\n\n    // strings.xml\n    AndroidConfig.Name.withName,\n    AndroidConfig.Facebook.withFacebookAppIdString,\n\n    // Dangerous -- these plugins run in reverse order.\n    AndroidConfig.GoogleServices.withGoogleServicesFile,\n\n    // Modify colors.xml and styles.xml\n    AndroidConfig.RootViewBackgroundColor.withRootViewBackgroundColor,\n    AndroidConfig.NavigationBar.withNavigationBar,\n    AndroidConfig.StatusBar.withStatusBar,\n    AndroidConfig.PrimaryColor.withPrimaryColor,\n    AndroidConfig.Notifications.withNotificationIconColor,\n\n    AndroidConfig.Icon.withIcons,\n    AndroidConfig.Notifications.withNotificationIcons,\n    // If we renamed the package, we should also move it around and rename it in source files\n    // Added last to ensure this plugin runs first. Out of tree solutions will mistakenly resolve the package incorrectly otherwise.\n    AndroidConfig.Package.withPackageRefactor,\n    AndroidConfig.SplashScreen.withSplashScreen,\n  ]);\n};\n"]}