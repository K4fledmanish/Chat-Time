{"version":3,"sources":["../../../src/commands/doctor/index.ts"],"names":["action","projectDir","Doctor","validateExpoServersAsync","validateWithNetworkAsync","NO_ISSUES","program","command","description","helpGroup","asyncActionProjectDir"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA,eAAeA,MAAf,CAAsBC,UAAtB,EAA0C;AACxC,QAAM,gCAAN,CADwC,CAGxC;;AACA,QAAMC,cAAOC,wBAAP,CAAgCF,UAAhC,CAAN;;AAEA,MAAI,CAAC,MAAMC,cAAOE,wBAAP,CAAgCH,UAAhC,CAAP,MAAwDC,cAAOG,SAAnE,EAA8E;AAC5E,wBAAK,0CAAL;AACD;AACF;;AAEc,kBAAUC,OAAV,EAA4B;AACzCA,EAAAA,OAAO,CACJC,OADH,CACW,eADX,EAEGC,WAFH,CAEe,kCAFf,EAGGC,SAHH,CAGa,MAHb,EAIGC,qBAJH,CAIyBV,MAJzB;AAKD","sourcesContent":["import { Doctor } from '@expo/xdl';\nimport { Command } from 'commander';\n\nimport log from '../../log';\nimport { warnUponCmdExe } from './windows';\n\nasync function action(projectDir: string) {\n  await warnUponCmdExe();\n\n  // note: this currently only warns when something isn't right, it doesn't fail\n  await Doctor.validateExpoServersAsync(projectDir);\n\n  if ((await Doctor.validateWithNetworkAsync(projectDir)) === Doctor.NO_ISSUES) {\n    log(`Didn't find any issues with the project!`);\n  }\n}\n\nexport default function (program: Command) {\n  program\n    .command('doctor [path]')\n    .description('Diagnose issues with the project')\n    .helpGroup('info')\n    .asyncActionProjectDir(action);\n}\n"],"file":"index.js"}