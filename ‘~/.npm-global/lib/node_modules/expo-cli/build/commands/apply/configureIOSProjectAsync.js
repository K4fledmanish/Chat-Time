"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = configureIOSProjectAsync;

function _config() {
  const data = require("@expo/config");

  _config = function () {
    return data;
  };

  return data;
}

function _configPlugins() {
  const data = require("@expo/config-plugins");

  _configPlugins = function () {
    return data;
  };

  return data;
}

function _xdl() {
  const data = require("@expo/xdl");

  _xdl = function () {
    return data;
  };

  return data;
}

function _log() {
  const data = _interopRequireDefault(require("../../log"));

  _log = function () {
    return data;
  };

  return data;
}

function _ConfigValidation() {
  const data = require("../eject/ConfigValidation");

  _ConfigValidation = function () {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function configureIOSProjectAsync({
  projectRoot,
  platforms
}) {
  // Check bundle ID before reading the config because it may mutate the config if the user is prompted to define it.
  const bundleIdentifier = await (0, _ConfigValidation().getOrPromptForBundleIdentifier)(projectRoot);
  const expoUsername = process.env.EAS_BUILD_USERNAME || (await _xdl().UserManager.getCurrentUsernameAsync());
  let {
    exp: config
  } = (0, _config().getConfig)(projectRoot, {
    skipSDKVersionRequirement: true,
    isModdedConfig: true
  }); // Add all built-in plugins

  config = (0, _configPlugins().withExpoIOSPlugins)(config, {
    bundleIdentifier,
    expoUsername
  }); // compile all plugins and mods

  config = await (0, _configPlugins().compileModsAsync)(config, {
    projectRoot,
    platforms
  });

  if (_log().default.isDebug) {
    _log().default.debug();

    _log().default.debug('Evaluated iOS config:'); // @ts-ignore: mods not on config type


    const {
      mods,
      ...rest
    } = config;

    _log().default.info(JSON.stringify(rest, null, 2));

    _log().default.info(mods);

    _log().default.debug();
  }
}
//# sourceMappingURL=configureIOSProjectAsync.js.map