{"version":3,"sources":["../../../src/commands/eject/ConfigValidation.ts"],"names":["noBundleIdMessage","noPackageMessage","validateBundleId","value","test","validatePackage","cachedBundleIdResults","cachedPackageNameResults","getBundleIdWarningAsync","bundleId","url","response","json","JSON","parse","body","trim","resultCount","firstApp","results","message","formatInUseWarning","trackName","sellerName","getPackageNameWarningAsync","packageName","statusCode","log","chalk","bold","dim","appName","author","id","italic","getOrPromptForBundleIdentifier","projectRoot","exp","skipSDKVersionRequirement","currentBundleId","ios","bundleIdentifier","CommandError","recommendedBundleId","android","package","username","owner","UserManager","getCurrentUsernameAsync","possibleId","slug","addNewLineIfNone","newLine","type","name","initial","validate","nonInteractiveHelp","warning","nestedWarn","attemptModification","getOrPromptForPackage","currentPackage","recommendedPackage","split","join","edits","exactEdits","modification","warnAboutConfigAndThrow","logNoConfig","yellow","notifyAboutManualConfigEdits","SilentError","cyan","stringify"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAEA,MAAMA,iBAAiB,GAAI,2IAA3B;AACA,MAAMC,gBAAgB,GAAI,gIAA1B;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAkD;AAChD,SAAO,4BAA4BC,IAA5B,CAAiCD,KAAjC,CAAP;AACD;;AAED,SAASE,eAAT,CAAyBF,KAAzB,EAAiD;AAC/C,SAAO,oDAAoDC,IAApD,CAAyDD,KAAzD,CAAP;AACD;;AAED,MAAMG,qBAA6C,GAAG,EAAtD;AACA,MAAMC,wBAAgD,GAAG,EAAzD;AAEA;;;;;;AAKA,eAAeC,uBAAf,CAAuCC,QAAvC,EAAiF;AAC/E;AACA,MAAIH,qBAAqB,CAACG,QAAD,CAAzB,EAAqC;AACnC,WAAOH,qBAAqB,CAACG,QAAD,CAA5B;AACD;;AAED,MAAI,EAAE,MAAM,gCAAoB,kBAApB,CAAR,CAAJ,EAAsD;AACpD;AACA,WAAO,IAAP;AACD;;AAED,QAAMC,GAAG,GAAI,2CAA0CD,QAAS,EAAhE;;AACA,MAAI;AAAA;;AACF,UAAME,QAAQ,GAAG,MAAM,oBAAID,GAAJ,CAAvB;AACA,UAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,mBAAWH,QAAQ,CAACI,IAApB,mDAAW,eAAeC,IAAf,EAAX,CAAb;;AACA,QAAIJ,IAAI,CAACK,WAAL,GAAmB,CAAvB,EAA0B;AACxB,YAAMC,QAAQ,GAAGN,IAAI,CAACO,OAAL,CAAa,CAAb,CAAjB;AACA,YAAMC,OAAO,GAAGC,kBAAkB,CAACH,QAAQ,CAACI,SAAV,EAAqBJ,QAAQ,CAACK,UAA9B,EAA0Cd,QAA1C,CAAlC;AACAH,MAAAA,qBAAqB,CAACG,QAAD,CAArB,GAAkCW,OAAlC;AACA,aAAOA,OAAP;AACD;AACF,GATD,CASE,gBAAM,CACN;AACD;;AACD,SAAO,IAAP;AACD;;AAED,eAAeI,0BAAf,CAA0CC,WAA1C,EAAuF;AACrF;AACA,MAAIlB,wBAAwB,CAACkB,WAAD,CAA5B,EAA2C;AACzC,WAAOlB,wBAAwB,CAACkB,WAAD,CAA/B;AACD;;AAED,MAAI,EAAE,MAAM,gCAAoB,iBAApB,CAAR,CAAJ,EAAqD;AACnD;AACA,WAAO,IAAP;AACD;;AAED,QAAMf,GAAG,GAAI,iDAAgDe,WAAY,EAAzE;;AACA,MAAI;AACF,UAAMd,QAAQ,GAAG,MAAM,oBAAID,GAAJ,CAAvB,CADE,CAEF;;AACA,QAAIC,QAAQ,CAACe,UAAT,KAAwB,GAA5B,EAAiC;AAC/B;AACA;AACA,YAAMN,OAAO,GAAI,mBAAkBO,eAAIC,KAAJ,CAAUC,IAAV,CACjCJ,WADiC,CAEjC,uBAAsBE,eAAIC,KAAJ,CAAUE,GAAV,CAAc,+BAAUpB,GAAV,CAAd,CAA8B,EAFtD;AAGAH,MAAAA,wBAAwB,CAACkB,WAAD,CAAxB,GAAwCL,OAAxC;AACA,aAAOA,OAAP;AACD;AACF,GAZD,CAYE,iBAAM,CACN;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAASC,kBAAT,CAA4BU,OAA5B,EAA6CC,MAA7C,EAA6DC,EAA7D,EAAiF;AAC/E,SAAQ,eAAcN,eAAIC,KAAJ,CAAUC,IAAV,CAAeE,OAAf,CAAwB,OAAMJ,eAAIC,KAAJ,CAAUM,MAAV,CAClDF,MADkD,CAElD,qBAAoBL,eAAIC,KAAJ,CAAUC,IAAV,CAAeI,EAAf,CAAmB,EAFzC;AAGD;;AAEM,eAAeE,8BAAf,CAA8CC,WAA9C,EAAoF;AAAA;;AACzF,QAAM;AAAEC,IAAAA;AAAF,MAAU,yBAAUD,WAAV,EAAuB;AAAEE,IAAAA,yBAAyB,EAAE;AAA7B,GAAvB,CAAhB;AAEA,QAAMC,eAAe,eAAGF,GAAG,CAACG,GAAP,6CAAG,SAASC,gBAAjC;;AACA,MAAIF,eAAJ,EAAqB;AACnB,QAAIrC,gBAAgB,CAACqC,eAAD,CAApB,EAAuC;AACrC,aAAOA,eAAP;AACD;;AACD,UAAM,KAAIG,uBAAJ,EACH,yLADG,CAAN;AAGD,GAXwF,CAazF;;;AACA,MAAIC,mBAAJ,CAdyF,CAezF;;AACA,MAAI,iBAAAN,GAAG,CAACO,OAAJ,8DAAaC,OAAb,KAAwB3C,gBAAgB,kBAACmC,GAAG,CAACO,OAAL,kDAAC,cAAaC,OAAd,CAA5C,EAAoE;AAAA;;AAClEF,IAAAA,mBAAmB,oBAAGN,GAAG,CAACO,OAAP,kDAAG,cAAaC,OAAnC;AACD,GAFD,MAEO;AAAA;;AACL,UAAMC,QAAQ,iBAAGT,GAAG,CAACU,KAAP,mDAAiB,MAAMC,mBAAYC,uBAAZ,EAArC;AACA,UAAMC,UAAU,GAAI,OAAMJ,QAAS,IAAGT,GAAG,CAACc,IAAK,EAA/C;;AACA,QAAIL,QAAQ,IAAI5C,gBAAgB,CAACgD,UAAD,CAAhC,EAA8C;AAC5CP,MAAAA,mBAAmB,GAAGO,UAAtB;AACD;AACF;;AAEDvB,iBAAIyB,gBAAJ;;AACA,sBACG,GAAEzB,eAAIC,KAAJ,CAAUC,IAAV,CAAgB,2BAAhB,CAA4C,IAAGF,eAAIC,KAAJ,CAAUE,GAAV,CAChD,+BAAU,oCAAV,CADgD,CAEhD,EAHJ;;AAKAH,iBAAI0B,OAAJ,GAhCyF,CAiCzF;AACA;AACA;AACA;;;AACA,QAAM;AAAEZ,IAAAA;AAAF,MAAuB,MAAM,wBACjC;AACEa,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,IAAI,EAAE,kBAFR;AAGEC,IAAAA,OAAO,EAAEb,mBAHX;AAIE;AACAvB,IAAAA,OAAO,EAAG,uDALZ;AAMEqC,IAAAA,QAAQ,EAAEvD;AANZ,GADiC,EASjC;AACEwD,IAAAA,kBAAkB,EAAE1D;AADtB,GATiC,CAAnC,CArCyF,CAmDzF;;AACA,QAAM2D,OAAO,GAAG,MAAMnD,uBAAuB,CAACiC,gBAAD,CAA7C;;AACA,MAAIkB,OAAJ,EAAa;AACXhC,mBAAI0B,OAAJ;;AACA1B,mBAAIiC,UAAJ,CAAeD,OAAf;;AACAhC,mBAAI0B,OAAJ;;AACA,QACE,EAAE,MAAM,6BAAa;AACnBjC,MAAAA,OAAO,EAAG,WADS;AAEnBoC,MAAAA,OAAO,EAAE;AAFU,KAAb,CAAR,CADF,EAKE;AACA7B,qBAAI0B,OAAJ;;AACA,aAAOlB,8BAA8B,CAACC,WAAD,CAArC;AACD;AACF,GAlEwF,CAoEzF;;;AACA,QAAMyB,mBAAmB,CACvBzB,WADuB,EAEvB;AACEI,IAAAA,GAAG,EAAE,EAAE,IAAIH,GAAG,CAACG,GAAJ,IAAW,EAAf,CAAF;AAAsBC,MAAAA;AAAtB;AADP,GAFuB,EAKvB;AAAED,IAAAA,GAAG,EAAE;AAAEC,MAAAA;AAAF;AAAP,GALuB,CAAzB;AAQA,SAAOA,gBAAP;AACD;;AAEM,eAAeqB,qBAAf,CAAqC1B,WAArC,EAA2E;AAAA;;AAChF,QAAM;AAAEC,IAAAA;AAAF,MAAU,yBAAUD,WAAV,EAAuB;AAAEE,IAAAA,yBAAyB,EAAE;AAA7B,GAAvB,CAAhB;AAEA,QAAMyB,cAAc,oBAAG1B,GAAG,CAACO,OAAP,kDAAG,cAAaC,OAApC;;AACA,MAAIkB,cAAJ,EAAoB;AAClB,QAAI1D,eAAe,CAAC0D,cAAD,CAAnB,EAAqC;AACnC,aAAOA,cAAP;AACD;;AACD,UAAM,KAAIrB,uBAAJ,EACH,2IADG,CAAN;AAGD,GAX+E,CAahF;;;AACA,MAAIsB,kBAAJ,CAdgF,CAehF;;AACA,MAAI,cAAA3B,GAAG,CAACG,GAAJ,wDAASC,gBAAT,KAA6BpC,eAAe,CAACgC,GAAG,CAACG,GAAJ,CAAQC,gBAAT,CAAhD,EAA4E;AAC1EuB,IAAAA,kBAAkB,GAAG3B,GAAG,CAACG,GAAJ,CAAQC,gBAA7B;AACD,GAFD,MAEO;AAAA;;AACL,UAAMK,QAAQ,kBAAGT,GAAG,CAACU,KAAP,qDAAiB,MAAMC,mBAAYC,uBAAZ,EAArC,CADK,CAEL;;AACA,UAAMC,UAAU,GAAI,OAAMJ,QAAS,IAAGT,GAAG,CAACc,IAAK,EAA5B,CAA8Bc,KAA9B,CAAoC,GAApC,EAAyCC,IAAzC,CAA8C,EAA9C,CAAnB;;AACA,QAAIpB,QAAQ,IAAIzC,eAAe,CAAC6C,UAAD,CAA/B,EAA6C;AAC3Cc,MAAAA,kBAAkB,GAAGd,UAArB;AACD;AACF;;AAEDvB,iBAAIyB,gBAAJ;;AACA,sBACG,GAAEzB,eAAIC,KAAJ,CAAUC,IAAV,CAAgB,qBAAhB,CAAsC,IAAGF,eAAIC,KAAJ,CAAUE,GAAV,CAC1C,+BAAU,kCAAV,CAD0C,CAE1C,EAHJ;;AAKAH,iBAAI0B,OAAJ,GAjCgF,CAmChF;AACA;AACA;AACA;;;AACA,QAAM;AAAE5B,IAAAA;AAAF,MAAkB,MAAM,wBAC5B;AACE6B,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,OAAO,EAAEQ,kBAHX;AAIE5C,IAAAA,OAAO,EAAG,sDAJZ;AAKEqC,IAAAA,QAAQ,EAAEpD;AALZ,GAD4B,EAQ5B;AACEqD,IAAAA,kBAAkB,EAAEzD;AADtB,GAR4B,CAA9B,CAvCgF,CAoDhF;;AACA,QAAM0D,OAAO,GAAG,MAAMnC,0BAA0B,CAACC,WAAD,CAAhD;;AACA,MAAIkC,OAAJ,EAAa;AACXhC,mBAAI0B,OAAJ;;AACA1B,mBAAIiC,UAAJ,CAAeD,OAAf;;AACAhC,mBAAI0B,OAAJ;;AACA,QACE,EAAE,MAAM,6BAAa;AACnBjC,MAAAA,OAAO,EAAG,WADS;AAEnBoC,MAAAA,OAAO,EAAE;AAFU,KAAb,CAAR,CADF,EAKE;AACA7B,qBAAI0B,OAAJ;;AACA,aAAOS,qBAAqB,CAAC1B,WAAD,CAA5B;AACD;AACF,GAnE+E,CAqEhF;;;AACA,QAAMyB,mBAAmB,CACvBzB,WADuB,EAEvB;AACEQ,IAAAA,OAAO,EAAE,EAAE,IAAIP,GAAG,CAACO,OAAJ,IAAe,EAAnB,CAAF;AAA0BC,MAAAA,OAAO,EAAEpB;AAAnC;AADX,GAFuB,EAKvB;AACEmB,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAEpB;AAAX;AADX,GALuB,CAAzB;AAUA,SAAOA,WAAP;AACD;;AAED,eAAeoC,mBAAf,CACEzB,WADF,EAEE+B,KAFF,EAGEC,UAHF,EAIiB;AACf,QAAMC,YAAY,GAAG,MAAM,iCAAkBjC,WAAlB,EAA+B+B,KAA/B,EAAsC;AAC/D7B,IAAAA,yBAAyB,EAAE;AADoC,GAAtC,CAA3B;;AAGA,MAAI+B,YAAY,CAACf,IAAb,KAAsB,SAA1B,EAAqC;AACnC3B,mBAAI0B,OAAJ;AACD,GAFD,MAEO;AACLiB,IAAAA,uBAAuB,CAACD,YAAY,CAACf,IAAd,EAAoBe,YAAY,CAACjD,OAAjC,EAA2CgD,UAA3C,CAAvB;AACD;AACF;;AAED,SAASG,WAAT,GAAuB;AACrB,sBACE5C,eAAIC,KAAJ,CAAU4C,MAAV,CACE,8GADF,CADF;AAKD;;AAED,SAASF,uBAAT,CAAiChB,IAAjC,EAA+ClC,OAA/C,EAAgE+C,KAAhE,EAA4F;AAC1FxC,iBAAIyB,gBAAJ;;AACA,MAAIE,IAAI,KAAK,MAAb,EAAqB;AACnB;AACA,wBAAI3B,eAAIC,KAAJ,CAAU4C,MAAV,CAAiBpD,OAAjB,CAAJ;AACD,GAHD,MAGO;AACLmD,IAAAA,WAAW;AACZ;;AAEDE,EAAAA,4BAA4B,CAACN,KAAD,CAA5B;AACA,QAAM,KAAIO,2BAAJ,GAAN;AACD;;AAED,SAASD,4BAAT,CAAsCN,KAAtC,EAAkE;AAChE,sBAAIxC,eAAIC,KAAJ,CAAU+C,IAAV,CAAgB,iEAAhB,CAAJ;;AACAhD,iBAAI0B,OAAJ;;AACA,sBAAIxC,IAAI,CAAC+D,SAAL,CAAeT,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAJ;;AACAxC,iBAAI0B,OAAJ;AACD","sourcesContent":["import { ExpoConfig, getConfig, modifyConfigAsync } from '@expo/config';\nimport { UserManager } from '@expo/xdl';\nimport got from 'got';\n\nimport CommandError, { SilentError } from '../../CommandError';\nimport log from '../../log';\nimport prompt, { confirmAsync } from '../../prompts';\nimport { learnMore } from '../utils/TerminalLink';\nimport { isUrlAvailableAsync } from '../utils/url';\n\nconst noBundleIdMessage = `Your project must have a \\`bundleIdentifier\\` set in the Expo config (app.json or app.config.js).\\nSee https://expo.fyi/bundle-identifier`;\nconst noPackageMessage = `Your project must have a \\`package\\` set in the Expo config (app.json or app.config.js).\\nSee https://expo.fyi/android-package`;\n\nfunction validateBundleId(value: string): boolean {\n  return /^[a-zA-Z][a-zA-Z0-9\\-.]+$/.test(value);\n}\n\nfunction validatePackage(value: string): boolean {\n  return /^[a-zA-Z][a-zA-Z0-9_]*(\\.[a-zA-Z][a-zA-Z0-9_]*)+$/.test(value);\n}\n\nconst cachedBundleIdResults: Record<string, string> = {};\nconst cachedPackageNameResults: Record<string, string> = {};\n\n/**\n * A quality of life method that provides a warning when the bundle ID is already in use.\n *\n * @param bundleId\n */\nasync function getBundleIdWarningAsync(bundleId: string): Promise<string | null> {\n  // Prevent fetching for the same ID multiple times.\n  if (cachedBundleIdResults[bundleId]) {\n    return cachedBundleIdResults[bundleId];\n  }\n\n  if (!(await isUrlAvailableAsync('itunes.apple.com'))) {\n    // If no network, simply skip the warnings since they'll just lead to more confusion.\n    return null;\n  }\n\n  const url = `http://itunes.apple.com/lookup?bundleId=${bundleId}`;\n  try {\n    const response = await got(url);\n    const json = JSON.parse(response.body?.trim());\n    if (json.resultCount > 0) {\n      const firstApp = json.results[0];\n      const message = formatInUseWarning(firstApp.trackName, firstApp.sellerName, bundleId);\n      cachedBundleIdResults[bundleId] = message;\n      return message;\n    }\n  } catch {\n    // Error fetching itunes data.\n  }\n  return null;\n}\n\nasync function getPackageNameWarningAsync(packageName: string): Promise<string | null> {\n  // Prevent fetching for the same ID multiple times.\n  if (cachedPackageNameResults[packageName]) {\n    return cachedPackageNameResults[packageName];\n  }\n\n  if (!(await isUrlAvailableAsync('play.google.com'))) {\n    // If no network, simply skip the warnings since they'll just lead to more confusion.\n    return null;\n  }\n\n  const url = `https://play.google.com/store/apps/details?id=${packageName}`;\n  try {\n    const response = await got(url);\n    // If the page exists, then warn the user.\n    if (response.statusCode === 200) {\n      // There is no JSON API for the Play Store so we can't concisely\n      // locate the app name and developer to match the iOS warning.\n      const message = `⚠️  The package ${log.chalk.bold(\n        packageName\n      )} is already in use. ${log.chalk.dim(learnMore(url))}`;\n      cachedPackageNameResults[packageName] = message;\n      return message;\n    }\n  } catch {\n    // Error fetching play store data or the page doesn't exist.\n  }\n  return null;\n}\n\nfunction formatInUseWarning(appName: string, author: string, id: string): string {\n  return `⚠️  The app ${log.chalk.bold(appName)} by ${log.chalk.italic(\n    author\n  )} is already using ${log.chalk.bold(id)}`;\n}\n\nexport async function getOrPromptForBundleIdentifier(projectRoot: string): Promise<string> {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  const currentBundleId = exp.ios?.bundleIdentifier;\n  if (currentBundleId) {\n    if (validateBundleId(currentBundleId)) {\n      return currentBundleId;\n    }\n    throw new CommandError(\n      `The ios.bundleIdentifier defined in your Expo config is not formatted properly. Only alphanumeric characters, '.', '-', and '_' are allowed, and each '.' must be followed by a letter.`\n    );\n  }\n\n  // Recommend a bundle ID based on the username and project slug.\n  let recommendedBundleId: string | undefined;\n  // Attempt to use the android package name first since it's convenient to have them aligned.\n  if (exp.android?.package && validateBundleId(exp.android?.package)) {\n    recommendedBundleId = exp.android?.package;\n  } else {\n    const username = exp.owner ?? (await UserManager.getCurrentUsernameAsync());\n    const possibleId = `com.${username}.${exp.slug}`;\n    if (username && validateBundleId(possibleId)) {\n      recommendedBundleId = possibleId;\n    }\n  }\n\n  log.addNewLineIfNone();\n  log(\n    `${log.chalk.bold(`📝  iOS Bundle Identifier`)} ${log.chalk.dim(\n      learnMore('https://expo.fyi/bundle-identifier')\n    )}`\n  );\n  log.newLine();\n  // Prompt the user for the bundle ID.\n  // Even if the project is using a dynamic config we can still\n  // prompt a better error message, recommend a default value, and help the user\n  // validate their custom bundle ID upfront.\n  const { bundleIdentifier } = await prompt(\n    {\n      type: 'text',\n      name: 'bundleIdentifier',\n      initial: recommendedBundleId,\n      // The Apple helps people know this isn't an EAS feature.\n      message: `What would you like your iOS bundle identifier to be?`,\n      validate: validateBundleId,\n    },\n    {\n      nonInteractiveHelp: noBundleIdMessage,\n    }\n  );\n\n  // Warn the user if the bundle ID is already in use.\n  const warning = await getBundleIdWarningAsync(bundleIdentifier);\n  if (warning) {\n    log.newLine();\n    log.nestedWarn(warning);\n    log.newLine();\n    if (\n      !(await confirmAsync({\n        message: `Continue?`,\n        initial: true,\n      }))\n    ) {\n      log.newLine();\n      return getOrPromptForBundleIdentifier(projectRoot);\n    }\n  }\n\n  // Apply the changes to the config.\n  await attemptModification(\n    projectRoot,\n    {\n      ios: { ...(exp.ios || {}), bundleIdentifier },\n    },\n    { ios: { bundleIdentifier } }\n  );\n\n  return bundleIdentifier;\n}\n\nexport async function getOrPromptForPackage(projectRoot: string): Promise<string> {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  const currentPackage = exp.android?.package;\n  if (currentPackage) {\n    if (validatePackage(currentPackage)) {\n      return currentPackage;\n    }\n    throw new CommandError(\n      `Invalid format of Android package name. Only alphanumeric characters, '.' and '_' are allowed, and each '.' must be followed by a letter.`\n    );\n  }\n\n  // Recommend a package name based on the username and project slug.\n  let recommendedPackage: string | undefined;\n  // Attempt to use the ios bundle id first since it's convenient to have them aligned.\n  if (exp.ios?.bundleIdentifier && validatePackage(exp.ios.bundleIdentifier)) {\n    recommendedPackage = exp.ios.bundleIdentifier;\n  } else {\n    const username = exp.owner ?? (await UserManager.getCurrentUsernameAsync());\n    // It's common to use dashes in your node project name, strip them from the suggested package name.\n    const possibleId = `com.${username}.${exp.slug}`.split('-').join('');\n    if (username && validatePackage(possibleId)) {\n      recommendedPackage = possibleId;\n    }\n  }\n\n  log.addNewLineIfNone();\n  log(\n    `${log.chalk.bold(`📝  Android package`)} ${log.chalk.dim(\n      learnMore('https://expo.fyi/android-package')\n    )}`\n  );\n  log.newLine();\n\n  // Prompt the user for the android package.\n  // Even if the project is using a dynamic config we can still\n  // prompt a better error message, recommend a default value, and help the user\n  // validate their custom android package upfront.\n  const { packageName } = await prompt(\n    {\n      type: 'text',\n      name: 'packageName',\n      initial: recommendedPackage,\n      message: `What would you like your Android package name to be?`,\n      validate: validatePackage,\n    },\n    {\n      nonInteractiveHelp: noPackageMessage,\n    }\n  );\n\n  // Warn the user if the package name is already in use.\n  const warning = await getPackageNameWarningAsync(packageName);\n  if (warning) {\n    log.newLine();\n    log.nestedWarn(warning);\n    log.newLine();\n    if (\n      !(await confirmAsync({\n        message: `Continue?`,\n        initial: true,\n      }))\n    ) {\n      log.newLine();\n      return getOrPromptForPackage(projectRoot);\n    }\n  }\n\n  // Apply the changes to the config.\n  await attemptModification(\n    projectRoot,\n    {\n      android: { ...(exp.android || {}), package: packageName },\n    },\n    {\n      android: { package: packageName },\n    }\n  );\n\n  return packageName;\n}\n\nasync function attemptModification(\n  projectRoot: string,\n  edits: Partial<ExpoConfig>,\n  exactEdits: Partial<ExpoConfig>\n): Promise<void> {\n  const modification = await modifyConfigAsync(projectRoot, edits, {\n    skipSDKVersionRequirement: true,\n  });\n  if (modification.type === 'success') {\n    log.newLine();\n  } else {\n    warnAboutConfigAndThrow(modification.type, modification.message!, exactEdits);\n  }\n}\n\nfunction logNoConfig() {\n  log(\n    log.chalk.yellow(\n      'No Expo config was found. Please create an Expo config (`app.config.js` or `app.json`) in your project root.'\n    )\n  );\n}\n\nfunction warnAboutConfigAndThrow(type: string, message: string, edits: Partial<ExpoConfig>) {\n  log.addNewLineIfNone();\n  if (type === 'warn') {\n    // The project is using a dynamic config, give the user a helpful log and bail out.\n    log(log.chalk.yellow(message));\n  } else {\n    logNoConfig();\n  }\n\n  notifyAboutManualConfigEdits(edits);\n  throw new SilentError();\n}\n\nfunction notifyAboutManualConfigEdits(edits: Partial<ExpoConfig>) {\n  log(log.chalk.cyan(`Please add the following to your Expo config, and try again... `));\n  log.newLine();\n  log(JSON.stringify(edits, null, 2));\n  log.newLine();\n}\n"],"file":"ConfigValidation.js"}