"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isExpoUpdatesInstalled = isExpoUpdatesInstalled;
exports.ensureValidVersions = ensureValidVersions;
exports.getAccountName = getAccountName;

function _config() {
  const data = require("@expo/config");

  _config = function () {
    return data;
  };

  return data;
}

function _xdl() {
  const data = require("@expo/xdl");

  _xdl = function () {
    return data;
  };

  return data;
}

function _projects() {
  const data = require("../../../../projects");

  _projects = function () {
    return data;
  };

  return data;
}

function isExpoUpdatesInstalled(projectDir) {
  const packageJson = (0, _config().getPackageJson)(projectDir);
  return packageJson.dependencies && 'expo-updates' in packageJson.dependencies;
}

function ensureValidVersions(exp) {
  if (!exp.runtimeVersion && !exp.sdkVersion) {
    throw new Error("Couldn't find either 'runtimeVersion' or 'sdkVersion' to configure 'expo-updates'. Please specify at least one of these properties under the 'expo' key in 'app.json'");
  }
}

async function getAccountName(exp) {
  const user = await _xdl().UserManager.getCurrentUserAsync();
  return user ? (0, _projects().getProjectOwner)(user, exp) : null;
}
//# sourceMappingURL=common.js.map