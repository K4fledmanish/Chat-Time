{"version":3,"sources":["../../../../../src/commands/eas-build/utils/expoUpdates/common.ts"],"names":["isExpoUpdatesInstalled","projectDir","packageJson","dependencies","ensureValidVersions","exp","runtimeVersion","sdkVersion","Error","getAccountName","user","UserManager","getCurrentUserAsync"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,SAASA,sBAAT,CAAgCC,UAAhC,EAAoD;AACzD,QAAMC,WAAW,GAAG,8BAAeD,UAAf,CAApB;AACA,SAAOC,WAAW,CAACC,YAAZ,IAA4B,kBAAkBD,WAAW,CAACC,YAAjE;AACD;;AAEM,SAASC,mBAAT,CAA6BC,GAA7B,EAAoD;AACzD,MAAI,CAACA,GAAG,CAACC,cAAL,IAAuB,CAACD,GAAG,CAACE,UAAhC,EAA4C;AAC1C,UAAM,IAAIC,KAAJ,CACJ,uKADI,CAAN;AAGD;AACF;;AAEM,eAAeC,cAAf,CAA8BJ,GAA9B,EAAuE;AAC5E,QAAMK,IAAI,GAAG,MAAMC,mBAAYC,mBAAZ,EAAnB;AACA,SAAOF,IAAI,GAAG,iCAAgBA,IAAhB,EAAsBL,GAAtB,CAAH,GAAgC,IAA3C;AACD","sourcesContent":["import { ExpoConfig, getPackageJson } from '@expo/config';\nimport { UserManager } from '@expo/xdl';\n\nimport { getProjectOwner } from '../../../../projects';\n\nexport function isExpoUpdatesInstalled(projectDir: string) {\n  const packageJson = getPackageJson(projectDir);\n  return packageJson.dependencies && 'expo-updates' in packageJson.dependencies;\n}\n\nexport function ensureValidVersions(exp: ExpoConfig): void {\n  if (!exp.runtimeVersion && !exp.sdkVersion) {\n    throw new Error(\n      \"Couldn't find either 'runtimeVersion' or 'sdkVersion' to configure 'expo-updates'. Please specify at least one of these properties under the 'expo' key in 'app.json'\"\n    );\n  }\n}\n\nexport async function getAccountName(exp: ExpoConfig): Promise<string | null> {\n  const user = await UserManager.getCurrentUserAsync();\n  return user ? getProjectOwner(user, exp) : null;\n}\n"],"file":"common.js"}