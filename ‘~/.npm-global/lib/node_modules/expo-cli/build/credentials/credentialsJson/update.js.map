{"version":3,"sources":["../../../src/credentials/credentialsJson/update.ts"],"names":["updateAndroidCredentialsAsync","ctx","credentialsJsonFilePath","path","join","projectDir","rawCredentialsJsonObject","fs","pathExists","rawFile","readFile","JSON","parse","error","log","experienceName","projectOwner","manifest","slug","keystore","android","fetchKeystore","isKeystoreComplete","keystorePassword","keyPassword","keyAlias","confirm","message","warn","keystorePath","updateFileAsync","shouldWarnKeystore","isFileUntrackedAsync","writeJson","spaces","shouldWarnCredentialsJson","newFilePaths","push","displayUntrackedFilesWarning","updateIosCredentialsAsync","bundleIdentifier","appLookupParams","accountName","projectName","pprofilePath","ios","provisioningProfilePath","distCertPath","distributionCertificate","appCredentials","getAppCredentials","distCredentials","getDistCert","credentials","provisioningProfile","areCredentialsComplete","certP12","certPassword","shouldWarnPProfile","shouldWarnDistCert","password","filePath","base64Data","absolutePath","isAbsolute","remove","mkdirp","dirname","writeFile","Buffer","from","withUntrackedFiles","showUntracked","trackedFiles","pathWithoutLeadingDot","replace","includes","length"],"mappings":"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","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport { gitStatusAsync } from '../../git';\nimport log from '../../log';\nimport { confirmAsync } from '../../prompts';\nimport { Context } from '../context';\n\nexport async function updateAndroidCredentialsAsync(ctx: Context) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error) {\n      log.error(`There was an error while reading credentials.json [${error}]`);\n      log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n  const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n  const keystore = await ctx.android.fetchKeystore(experienceName);\n  if (!keystore) {\n    log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const isKeystoreComplete =\n    keystore.keystore && keystore.keystorePassword && keystore.keyPassword && keystore.keyAlias;\n\n  if (!isKeystoreComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      log.warn('Aborting...');\n      return;\n    }\n  }\n\n  const keystorePath =\n    rawCredentialsJsonObject?.android?.keystore?.keystorePath ?? 'android/keystores/keystore.jks';\n  log(`Writing Keystore to ${keystorePath}`);\n  await updateFileAsync(ctx.projectDir, keystorePath, keystore.keystore);\n  const shouldWarnKeystore = await isFileUntrackedAsync(keystorePath);\n\n  rawCredentialsJsonObject.android = {\n    keystore: {\n      keystorePath,\n      keystorePassword: keystore.keystorePassword,\n      keyAlias: keystore.keyAlias,\n      keyPassword: keystore.keyPassword,\n    },\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnKeystore) {\n    newFilePaths.push(keystorePath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nexport async function updateIosCredentialsAsync(ctx: Context, bundleIdentifier: string) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error) {\n      log.error(`There was an error while reading credentials.json [${error}]`);\n      log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n\n  const appLookupParams = {\n    accountName: ctx.projectOwner,\n    projectName: ctx.manifest.slug,\n    bundleIdentifier,\n  };\n  const pprofilePath =\n    rawCredentialsJsonObject?.ios?.provisioningProfilePath ?? 'ios/certs/profile.mobileprovision';\n  const distCertPath =\n    rawCredentialsJsonObject?.ios?.distributionCertificate?.path ?? 'ios/certs/dist-cert.p12';\n  const appCredentials = await ctx.ios.getAppCredentials(appLookupParams);\n  const distCredentials = await ctx.ios.getDistCert(appLookupParams);\n  if (!appCredentials?.credentials?.provisioningProfile && !distCredentials) {\n    log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const areCredentialsComplete =\n    appCredentials?.credentials?.provisioningProfile &&\n    distCredentials?.certP12 &&\n    distCredentials?.certPassword;\n\n  if (!areCredentialsComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      log.warn('Aborting...');\n      return;\n    }\n  }\n\n  log(`Writing Provisioning Profile to ${pprofilePath}`);\n  await updateFileAsync(\n    ctx.projectDir,\n    pprofilePath,\n    appCredentials?.credentials?.provisioningProfile\n  );\n  const shouldWarnPProfile = await isFileUntrackedAsync(pprofilePath);\n\n  log(`Writing Distribution Certificate to ${distCertPath}`);\n  await updateFileAsync(ctx.projectDir, distCertPath, distCredentials?.certP12);\n  const shouldWarnDistCert = await isFileUntrackedAsync(distCertPath);\n\n  rawCredentialsJsonObject.ios = {\n    ...(appCredentials?.credentials?.provisioningProfile\n      ? { provisioningProfilePath: pprofilePath }\n      : {}),\n    ...(distCredentials?.certP12 && distCredentials?.certPassword\n      ? {\n          distributionCertificate: {\n            path: distCertPath,\n            password: distCredentials?.certPassword,\n          },\n        }\n      : {}),\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnPProfile) {\n    newFilePaths.push(pprofilePath);\n  }\n  if (shouldWarnDistCert) {\n    newFilePaths.push(distCertPath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nasync function updateFileAsync(projectDir: string, filePath: string, base64Data?: string) {\n  const absolutePath = path.isAbsolute(filePath) ? filePath : path.join(projectDir, filePath);\n  if (await fs.pathExists(absolutePath)) {\n    await fs.remove(absolutePath);\n  }\n  if (base64Data) {\n    await fs.mkdirp(path.dirname(filePath));\n    await fs.writeFile(filePath, Buffer.from(base64Data, 'base64'));\n  }\n}\n\nasync function isFileUntrackedAsync(path: string): Promise<boolean> {\n  const withUntrackedFiles = await gitStatusAsync({ showUntracked: true });\n  const trackedFiles = await gitStatusAsync({ showUntracked: false });\n  const pathWithoutLeadingDot = path.replace(/^\\.\\//, ''); // remove leading './' from path\n  return (\n    withUntrackedFiles.includes(pathWithoutLeadingDot) &&\n    !trackedFiles.includes(pathWithoutLeadingDot)\n  );\n}\n\nfunction displayUntrackedFilesWarning(newFilePaths: string[]) {\n  if (newFilePaths.length === 1) {\n    log.warn(\n      `File ${newFilePaths[0]} is currently untracked, remember to add it to .gitignore or to encrypt it. (e.g. with git-crypt)`\n    );\n  } else if (newFilePaths.length > 1) {\n    log.warn(\n      `Files ${newFilePaths.join(\n        ', '\n      )} are currently untracked, remember to add them to .gitignore or to encrypt them. (e.g. with git-crypt)`\n    );\n  }\n}\n"],"file":"update.js"}