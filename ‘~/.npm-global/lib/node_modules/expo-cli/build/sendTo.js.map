{"version":3,"sources":["../src/sendTo.ts"],"names":["getRecipient","sendTo","recipient","UserSettings","getAsync","sendUrlAsync","url","email","log","chalk","bold","spinner","start","result","Exp","sendAsync","succeed","e","fail","message"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,eAAeA,YAAf,CAA4BC,MAA5B,EAAwE;AAC7E,MAAIC,SAAwB,GAAG,EAA/B;;AACA,MAAID,MAAJ,EAAY;AACV,QAAI,OAAOA,MAAP,KAAkB,SAAtB,EAAiC;AAC/BC,MAAAA,SAAS,GAAGD,MAAZ;AACD,KAFD,MAEO;AACLC,MAAAA,SAAS,GAAG,MAAMC,oBAAaC,QAAb,CAAsB,QAAtB,EAAgC,IAAhC,CAAlB;AACD;;AAED,QAAI,CAACF,SAAL,EAAgB;AACd,aAAO,MAAM,mCAAb;AACD;AACF;;AAED,SAAOA,SAAP;AACD;;AACM,eAAeG,YAAf,CAA4BC,GAA5B,EAAyCJ,SAAzC,EAA4D;AACjE,QAAMK,KAAK,GAAGC,eAAIC,KAAJ,CAAUC,IAAV,CAAeR,SAAf,CAAd;;AACA,QAAMS,OAAO,GAAG,oBAAK,kBAAiBJ,KAAM,EAA5B,EAA+BK,KAA/B,EAAhB;;AACA,MAAI;AACF,QAAIC,MAAM,GAAG,MAAMC,WAAIC,SAAJ,CAAcb,SAAd,EAAyBI,GAAzB,CAAnB;AACAK,IAAAA,OAAO,CAACK,OAAR,CAAiB,eAAcT,KAAM,EAArC;AACD,GAHD,CAGE,OAAOU,CAAP,EAAU;AACVN,IAAAA,OAAO,CAACO,IAAR,CAAc,mBAAkBX,KAAM,KAAIU,CAAC,CAACE,OAAQ,EAApD;AACD;;AACD,SAAON,MAAP;AACD","sourcesContent":["import { Exp, UserSettings } from '@expo/xdl';\nimport ora from 'ora';\n\nimport { askForSendToAsync } from './askUser';\nimport log from './log';\n\nexport async function getRecipient(sendTo?: string | boolean): Promise<string> {\n  let recipient: string | null = '';\n  if (sendTo) {\n    if (typeof sendTo !== 'boolean') {\n      recipient = sendTo;\n    } else {\n      recipient = await UserSettings.getAsync('sendTo', null);\n    }\n\n    if (!recipient) {\n      return await askForSendToAsync();\n    }\n  }\n\n  return recipient;\n}\nexport async function sendUrlAsync(url: string, recipient: string) {\n  const email = log.chalk.bold(recipient);\n  const spinner = ora(`Sending URL to ${email}`).start();\n  try {\n    var result = await Exp.sendAsync(recipient, url);\n    spinner.succeed(`Sent URL to ${email}`);\n  } catch (e) {\n    spinner.fail(`Failed to email ${email}: ${e.message}`);\n  }\n  return result;\n}\n"],"file":"sendTo.js"}