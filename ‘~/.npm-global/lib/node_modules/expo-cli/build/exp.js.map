{"version":3,"sources":["../src/exp.ts"],"names":["packageJSON","require","Api","setClientName","version","ApiV2","Command","prototype","urlOpts","addOptions","allowOffline","option","helpGroup","name","commands","length","__helpGroup","parent","longDescription","__longDescription","pad","str","width","len","Math","max","Array","join","humanReadableArgName","arg","nameOutput","variadic","required","breakSentence","input","prepareCommands","filter","cmd","getenv","boolish","includes","map","i","args","_args","description","_description","nameWithAlias","_name","usage","commandsStr","argsStr","arguments","_usage","helpInformation","desc","replaceAll","argsDescription","_argsDescription","padWidth","push","forEach","cmdName","_alias","chalk","bold","dim","commandHelp","options","optionHelp","replace","string","search","split","helpGroupOrder","sortHelpGroups","helpGroups","groupOrder","Set","Object","keys","subGroupOrder","core","eas","sortSubGroupWithOrder","groupName","group","order","sortedCommands","key","shift","index","findIndex","item","startsWith","splice","concat","sortedGroups","reduce","prev","curr","command","sorted","values","noArgsCmd","noArgsCmdArgs","wrappedDescription","paddedName","program","on","asyncAction","asyncFn","skipUpdateCheck","action","checkCliVersionAsync","e","offline","Config","Analytics","flush","err","AbortCommandError","SilentError","isCommandError","log","error","message","_isApiError","red","isXDLError","isJsonFileError","isConfigError","code","addNewLineIfNone","stacktrace","formatStackTrace","stack","gray","process","exit","getStringBetweenParens","value","regExp","matches","exec","focusLastPathComponent","parts","last","pop","current","treeStackLines","line","first","trim","branch","Boolean","asyncActionProjectDir","projectDir","opts","cwd","path","resolve","config","green","cyan","newLine","pathToConfig","fs","existsSync","relativeInput","relative","formattedPath","reset","nestedWarn","helpCommand","logLines","msg","logFn","logStackTrace","chunk","nestedLogFn","traceInfo","JSON","parse","isLibraryFrame","stackFrames","lastAppCodeFrameIndex","lastFrameIndexToLog","min","unloggedFrames","match","printNewLineBeforeNextLog","logWithLevel","level","bunyan","INFO","includesStack","nested","WARN","warn","nestedError","bar","PackagerLogsStream","projectRoot","onStartBuildBundle","ProgressBar","total","clear","complete","incomplete","setBundleProgressBar","onProgressBuildBundle","percent","ticks","tick","onFinishBuildBundle","startTime","endTime","terminate","getTime","updateLogs","updater","newLogChunks","newLogChunk","issueId","issueCleared","ProjectUtils","attachLoggerStream","stream","write","tag","type","checkConfig","Project","currentStatus","spinner","start","setSpinner","status","Doctor","validateWithoutNetworkAsync","skipSDKVersionRequirement","FATAL","Error","stop","runAsync","programName","setSegmentNodeKey","setVersionName","_registerLogs","UserManager","setInteractiveAuthenticationCallback","loginOrRegisterAsync","env","SERVER_URL","serverUrl","parsedUrl","url","port","parseInt","hostname","api","host","developerTool","subCommand","availableCommands","suggestion","find","commandName","nonInteractive","stdin","isTTY","argv","help","updateIsAvailable","latest","deprecated","update","checkForUpdateAsync","borderColor","padding","NotificationCode","START_LOADING","simpleSpinner","STOP_LOADING","DOWNLOAD_CLI_PROGRESS","ERROR","Logger","notifications","addStream","global","writePathAsync","Binaries","writePathToUserSettingsAsync","run","Promise","all","catch"],"mappings":"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","sourcesContent":["import bunyan from '@expo/bunyan';\nimport { setCustomConfigPath } from '@expo/config';\nimport simpleSpinner from '@expo/simple-spinner';\nimport {\n  Analytics,\n  Api,\n  ApiV2,\n  Binaries,\n  Config,\n  Doctor,\n  Logger,\n  LogRecord,\n  LogUpdater,\n  NotificationCode,\n  PackagerLogsStream,\n  Project,\n  ProjectUtils,\n  UserManager,\n} from '@expo/xdl';\nimport boxen from 'boxen';\nimport chalk from 'chalk';\nimport program, { Command } from 'commander';\nimport fs from 'fs';\nimport getenv from 'getenv';\nimport leven from 'leven';\nimport findLastIndex from 'lodash/findLastIndex';\nimport ora from 'ora';\nimport path from 'path';\nimport ProgressBar from 'progress';\nimport stripAnsi from 'strip-ansi';\nimport url from 'url';\nimport wrapAnsi from 'wrap-ansi';\n\nimport { AbortCommandError, SilentError } from './CommandError';\nimport { loginOrRegisterAsync } from './accounts';\nimport { registerCommands } from './commands';\nimport log from './log';\nimport update from './update';\nimport urlOpts from './urlOpts';\n\n// We use require() to exclude package.json from TypeScript's analysis since it lives outside the\n// src directory and would change the directory structure of the emitted files under the build\n// directory\nconst packageJSON = require('../package.json');\n\nApi.setClientName(packageJSON.version);\nApiV2.setClientName(packageJSON.version);\n\n// The following prototyped functions are not used here, but within in each file found in `./commands`\n// Extending commander to easily add more options to certain command line arguments\nCommand.prototype.urlOpts = function () {\n  urlOpts.addOptions(this);\n  return this;\n};\n\nCommand.prototype.allowOffline = function () {\n  this.option('--offline', 'Allows this command to run while offline');\n  return this;\n};\n\n// Add support for logical command groupings\nCommand.prototype.helpGroup = function (name: string) {\n  if (this.commands[this.commands.length - 1]) {\n    this.commands[this.commands.length - 1].__helpGroup = name;\n  } else {\n    this.parent.helpGroup(name);\n  }\n  return this;\n};\n\n// A longer description that will be displayed then the command is used with --help\nCommand.prototype.longDescription = function (name: string) {\n  if (this.commands[this.commands.length - 1]) {\n    this.commands[this.commands.length - 1].__longDescription = name;\n  } else {\n    this.parent.longDescription(name);\n  }\n  return this;\n};\n\nfunction pad(str: string, width: number): string {\n  // Pulled from commander for overriding\n  const len = Math.max(0, width - stripAnsi(str).length);\n  return str + Array(len + 1).join(' ');\n}\n\nfunction humanReadableArgName(arg: any): string {\n  // Pulled from commander for overriding\n  const nameOutput = arg.name + (arg.variadic === true ? '...' : '');\n  return arg.required ? `<${nameOutput}>` : `[${nameOutput}]`;\n}\n\nfunction breakSentence(input: string): string {\n  // Break a sentence by the word after a max character count, adjusting for ansi characters\n  return wrapAnsi(input, 72);\n}\n\nCommand.prototype.prepareCommands = function () {\n  return this.commands\n    .filter(function (cmd: Command) {\n      // Display all commands with EXPO_DEBUG, otherwise use the noHelp option.\n      if (getenv.boolish('EXPO_DEBUG', false)) {\n        return true;\n      }\n      return !['internal', 'eas'].includes(cmd.__helpGroup);\n    })\n    .map(function (cmd: Command, i: number) {\n      const args = cmd._args.map(humanReadableArgName).join(' ');\n\n      const description = cmd._description;\n      // Remove alias. We still show this with --help on the command.\n      // const alias = cmd._alias;\n      // const nameWithAlias = cmd._name + (alias ? '|' + alias : '');\n      const nameWithAlias = cmd._name;\n      return [\n        nameWithAlias +\n          // Remove the redundant [options] string that's shown after every command.\n          // (cmd.options.length ? ' [options]' : '') +\n          (args ? ' ' + args : ''),\n        breakSentence(description),\n        cmd.__helpGroup ?? 'misc',\n      ];\n    });\n};\n\n/**\n * Set / get the command usage `str`.\n *\n * @param {String} str\n * @return {String|Command}\n * @api public\n */\n\n// @ts-ignore\nCommand.prototype.usage = function (str: string) {\n  var args = this._args.map(function (arg: any[]) {\n    return humanReadableArgName(arg);\n  });\n\n  const commandsStr = this.commands.length ? '[command]' : '';\n  const argsStr = this._args.length ? args.join(' ') : '';\n\n  let usage = commandsStr + argsStr;\n  if (usage.length) usage += ' ';\n  usage += '[options]';\n\n  if (arguments.length === 0) {\n    return this._usage || usage;\n  }\n  this._usage = str;\n\n  return this;\n};\n\nCommand.prototype.helpInformation = function () {\n  let desc: string[] = [];\n  // Use the long description if available, otherwise use the regular description.\n  const description = this.__longDescription ?? this._description;\n  if (description) {\n    desc = [replaceAll(breakSentence(description), '\\n', pad('\\n', 3)), ''];\n\n    const argsDescription = this._argsDescription;\n    if (argsDescription && this._args.length) {\n      const width = this.padWidth();\n      desc.push('Arguments:');\n      desc.push('');\n      this._args.forEach(({ name }: { name: string }) => {\n        desc.push('  ' + pad(name, width) + '  ' + argsDescription[name]);\n      });\n      desc.push('');\n    }\n  }\n\n  let cmdName = this._name;\n  if (this._alias) {\n    // Here is the only place we show the command alias\n    cmdName = `${cmdName}|${this._alias}`;\n  }\n\n  // Dim the options to keep things consistent.\n  const usage = `${chalk.bold`Usage:`} ${cmdName} ${chalk.dim(this.usage())}\\n`;\n\n  const commandHelp = '' + this.commandHelp();\n\n  const options = [chalk.bold`Options:`, '\\n' + this.optionHelp().replace(/^/gm, '    '), ''];\n\n  // return ['', usage, ...desc, ...options, commandHelp].join('\\n') + '\\n';\n  return ['', usage, ...desc, ...options, commandHelp].join(pad('\\n', 3)) + '\\n';\n};\n\nfunction replaceAll(string: string, search: string, replace: string): string {\n  return string.split(search).join(replace);\n}\n\nexport const helpGroupOrder = [\n  'auth',\n  'core',\n  'client',\n  'info',\n  'publish',\n  'build',\n  'credentials',\n  'eas',\n  'notifications',\n  'url',\n  'webhooks',\n  'upload',\n  'eject',\n  'experimental',\n  'internal',\n];\n\nfunction sortHelpGroups(helpGroups: Record<string, string[][]>): Record<string, string[][]> {\n  const groupOrder = [\n    ...new Set([\n      ...helpGroupOrder,\n      // add any others and remove duplicates\n      ...Object.keys(helpGroups),\n    ]),\n  ];\n\n  const subGroupOrder: Record<string, string[]> = {\n    core: ['init', 'start', 'start:web', 'publish', 'export'],\n    eas: ['eas:credentials'],\n  };\n\n  const sortSubGroupWithOrder = (groupName: string, group: string[][]): string[][] => {\n    const order: string[] = subGroupOrder[groupName];\n    if (!order?.length) {\n      return group;\n    }\n\n    const sortedCommands: string[][] = [];\n\n    while (order.length) {\n      const key = order.shift()!;\n      const index = group.findIndex(item => item[0].startsWith(key));\n      if (index >= 0) {\n        const [item] = group.splice(index, 1);\n        sortedCommands.push(item);\n      }\n    }\n\n    return sortedCommands.concat(group);\n  };\n\n  // Reverse the groups\n  const sortedGroups: Record<string, string[][]> = {};\n  while (groupOrder.length) {\n    const group = groupOrder.shift()!;\n    if (group in helpGroups) {\n      sortedGroups[group] = helpGroups[group];\n    }\n  }\n\n  return Object.keys(sortedGroups).reduce(\n    (prev, curr) => ({\n      ...prev,\n      // Sort subgroups that have a defined order\n      [curr]: sortSubGroupWithOrder(curr, helpGroups[curr]),\n    }),\n    {}\n  );\n}\n\n// Extended the help renderer to add a custom format and groupings.\nCommand.prototype.commandHelp = function () {\n  if (!this.commands.length) {\n    return '';\n  }\n  const width: number = this.padWidth();\n  const commands: string[][] = this.prepareCommands();\n\n  const helpGroups: Record<string, string[][]> = {};\n\n  // Sort commands into helpGroups\n  for (const command of commands) {\n    const groupName = command[2];\n    if (!helpGroups[groupName]) {\n      helpGroups[groupName] = [];\n    }\n    helpGroups[groupName].push(command);\n  }\n\n  const sorted = sortHelpGroups(helpGroups);\n\n  // Render everything.\n  return [\n    '' + chalk.bold('Commands:'),\n    '',\n    // Render all of the groups.\n    Object.values(sorted)\n      .map(group =>\n        group\n          // Render the command and description\n          .map(([cmd, description]: string[]) => {\n            // Dim the arguments that come after the command, this makes scanning a bit easier.\n            let [noArgsCmd, ...noArgsCmdArgs] = cmd.split(' ');\n            if (noArgsCmdArgs.length) {\n              noArgsCmd += ` ${chalk.dim(noArgsCmdArgs.join(' '))}`;\n            }\n\n            // Word wrap the description.\n            let wrappedDescription = description;\n            if (description) {\n              // Ensure the wrapped description appears on the same padded line.\n              wrappedDescription = '  ' + replaceAll(description, '\\n', pad('\\n', width + 3));\n            }\n\n            const paddedName = wrappedDescription ? pad(noArgsCmd, width) : noArgsCmd;\n            return paddedName + wrappedDescription;\n          })\n          .join('\\n')\n          .replace(/^/gm, '    ')\n      )\n      // Double new line to add spacing between groups\n      .join('\\n\\n'),\n    '',\n  ].join('\\n');\n};\n\nprogram.on('--help', () => {\n  log(`  Run a command with --help for more info 💡`);\n  log(`    $ expo start --help`);\n  log();\n});\n\nexport type Action = (...args: any[]) => void;\n\n// asyncAction is a wrapper for all commands/actions to be executed after commander is done\n// parsing the command input\nCommand.prototype.asyncAction = function (asyncFn: Action, skipUpdateCheck: boolean) {\n  return this.action(async (...args: any[]) => {\n    if (!skipUpdateCheck) {\n      try {\n        await checkCliVersionAsync();\n      } catch (e) {}\n    }\n\n    try {\n      const options = args[args.length - 1];\n      if (options.offline) {\n        Config.offline = true;\n      }\n\n      await asyncFn(...args);\n      // After a command, flush the analytics queue so the program will not have any active timers\n      // This allows node js to exit immediately\n      Analytics.flush();\n    } catch (err) {\n      // TODO: Find better ways to consolidate error messages\n      if (err instanceof AbortCommandError || err instanceof SilentError) {\n        // Do nothing when a prompt is cancelled or the error is logged in a pretty way.\n      } else if (err.isCommandError) {\n        log.error(err.message);\n      } else if (err._isApiError) {\n        log.error(chalk.red(err.message));\n      } else if (err.isXDLError) {\n        log.error(err.message);\n      } else if (err.isJsonFileError || err.isConfigError) {\n        if (err.code === 'EJSONEMPTY') {\n          // Empty JSON is an easy bug to debug. Often this is thrown for package.json or app.json being empty.\n          log.error(err.message);\n        } else {\n          log.addNewLineIfNone();\n          log.error(err.message);\n          const stacktrace = formatStackTrace(err.stack, this.name());\n          log.error(chalk.gray(stacktrace));\n        }\n      } else {\n        log.error(err.message);\n        log.error(chalk.gray(err.stack));\n      }\n\n      process.exit(1);\n    }\n  });\n};\n\nfunction getStringBetweenParens(value: string): string {\n  const regExp = /\\(([^)]+)\\)/;\n  const matches = regExp.exec(value);\n  if (matches && matches?.length > 1) {\n    return matches[1];\n  }\n  return value;\n}\n\nfunction focusLastPathComponent(value: string): string {\n  const parts = value.split('/');\n  if (parts.length > 1) {\n    const last = parts.pop();\n    const current = chalk.dim(parts.join('/') + '/');\n    return `${current}${last}`;\n  }\n  return chalk.dim(value);\n}\n\nfunction formatStackTrace(stacktrace: string, command: string): string {\n  const treeStackLines: string[][] = [];\n  for (const line of stacktrace.split('\\n')) {\n    const [first, ...parts] = line.trim().split(' ');\n    // Remove at -- we'll use a branch instead.\n    if (first === 'at') {\n      treeStackLines.push(parts);\n    }\n  }\n\n  return treeStackLines\n    .map((parts, index) => {\n      let first = parts.shift();\n      let last = parts.pop();\n\n      // Replace anonymous with command name\n      if (first === 'Command.<anonymous>') {\n        first = chalk.bold(`expo ${command}`);\n      } else if (first?.startsWith('Object.')) {\n        // Remove extra JS types from function names\n        first = first.split('Object.').pop()!;\n      } else if (first?.startsWith('Function.')) {\n        // Remove extra JS types from function names\n        first = first.split('Function.').pop()!;\n      } else if (first?.startsWith('/')) {\n        // If the first element is a path\n        first = focusLastPathComponent(getStringBetweenParens(first));\n      }\n\n      if (last) {\n        last = focusLastPathComponent(getStringBetweenParens(last));\n      }\n      const branch = (index === treeStackLines.length - 1 ? '└' : '├') + '─';\n      return ['   ', branch, first, ...parts, last].filter(Boolean).join(' ');\n    })\n    .join('\\n');\n}\n\n// asyncActionProjectDir captures the projectDirectory from the command line,\n// setting it to cwd if it is not provided.\n// Commands such as `start` and `publish` use this.\n// It does several things:\n// - Everything in asyncAction\n// - Checks if the user is logged in or out\n// - Checks for updates\n// - Attaches the bundling logger\n// - Checks if the project directory is valid or not\n// - Runs AsyncAction with the projectDir as an argument\nCommand.prototype.asyncActionProjectDir = function (\n  asyncFn: Action,\n  options: { checkConfig?: boolean; skipSDKVersionRequirement?: boolean } = {}\n) {\n  this.option('--config [file]', 'Specify a path to app.json or app.config.js');\n  return this.asyncAction(async (projectDir: string, ...args: any[]) => {\n    const opts = args[0];\n\n    if (!projectDir) {\n      projectDir = process.cwd();\n    } else {\n      projectDir = path.resolve(process.cwd(), projectDir);\n    }\n\n    if (opts.config) {\n      // @ts-ignore: This guards against someone passing --config without a path.\n      if (opts.config === true) {\n        log.addNewLineIfNone();\n        log('Please specify your custom config path:');\n        log(log.chalk.green(`  expo ${this.name()} --config ${log.chalk.cyan(`<app-config>`)}`));\n        log.newLine();\n        process.exit(1);\n      }\n\n      const pathToConfig = path.resolve(process.cwd(), opts.config);\n      // Warn the user when the custom config path they provided does not exist.\n      if (!fs.existsSync(pathToConfig)) {\n        const relativeInput = path.relative(process.cwd(), opts.config);\n        const formattedPath = log.chalk\n          .reset(pathToConfig)\n          .replace(relativeInput, log.chalk.bold(relativeInput));\n        log.addNewLineIfNone();\n        log.nestedWarn(`Custom config file does not exist:\\n${formattedPath}`);\n        log.newLine();\n        const helpCommand = log.chalk.green(`expo ${this.name()} --help`);\n        log(`Run ${helpCommand} for more info`);\n        log.newLine();\n        process.exit(1);\n        // throw new Error(`File at provided config path does not exist: ${pathToConfig}`);\n      }\n      setCustomConfigPath(projectDir, pathToConfig);\n    }\n\n    const logLines = (msg: any, logFn: (...args: any[]) => void) => {\n      if (typeof msg === 'string') {\n        for (const line of msg.split('\\n')) {\n          logFn(line);\n        }\n      } else {\n        logFn(msg);\n      }\n    };\n\n    const logStackTrace = (\n      chunk: LogRecord,\n      logFn: (...args: any[]) => void,\n      nestedLogFn: (...args: any[]) => void\n    ) => {\n      let traceInfo;\n      try {\n        traceInfo = JSON.parse(chunk.msg);\n      } catch (e) {\n        return logFn(chunk.msg);\n      }\n\n      const { message, stack } = traceInfo;\n      log.addNewLineIfNone();\n      logFn(chalk.bold(message));\n\n      const isLibraryFrame = (line: string) => {\n        return line.startsWith('node_modules');\n      };\n\n      const stackFrames: string[] = stack.split('\\n').filter((line: string) => line);\n      const lastAppCodeFrameIndex = findLastIndex(stackFrames, (line: string) => {\n        return !isLibraryFrame(line);\n      });\n      let lastFrameIndexToLog = Math.min(\n        stackFrames.length - 1,\n        lastAppCodeFrameIndex + 2 // show max two more frames after last app code frame\n      );\n      let unloggedFrames = stackFrames.length - lastFrameIndexToLog;\n\n      // If we're only going to exclude one frame, just log them all\n      if (unloggedFrames === 1) {\n        lastFrameIndexToLog = stackFrames.length - 1;\n        unloggedFrames = 0;\n      }\n\n      for (let i = 0; i <= lastFrameIndexToLog; i++) {\n        const line = stackFrames[i];\n        if (!line) {\n          continue;\n        } else if (line.match(/react-native\\/.*YellowBox.js/)) {\n          continue;\n        }\n\n        if (line.startsWith('node_modules')) {\n          nestedLogFn('- ' + line);\n        } else {\n          nestedLogFn('* ' + line);\n        }\n      }\n\n      if (unloggedFrames > 0) {\n        nestedLogFn(`- ... ${unloggedFrames} more stack frames from framework internals`);\n      }\n\n      log.printNewLineBeforeNextLog();\n    };\n\n    const logWithLevel = (chunk: LogRecord) => {\n      if (!chunk.msg) {\n        return;\n      }\n      if (chunk.level <= bunyan.INFO) {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, log, log.nested);\n        } else {\n          logLines(chunk.msg, log);\n        }\n      } else if (chunk.level === bunyan.WARN) {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, log.warn, log.nestedWarn);\n        } else {\n          logLines(chunk.msg, log.warn);\n        }\n      } else {\n        if (chunk.includesStack) {\n          logStackTrace(chunk, log.error, log.nestedError);\n        } else {\n          logLines(chunk.msg, log.error);\n        }\n      }\n    };\n\n    let bar: ProgressBar | null;\n    // eslint-disable-next-line no-new\n    new PackagerLogsStream({\n      projectRoot: projectDir,\n      onStartBuildBundle: () => {\n        bar = new ProgressBar('Building JavaScript bundle [:bar] :percent', {\n          width: 64,\n          total: 100,\n          clear: true,\n          complete: '=',\n          incomplete: ' ',\n        });\n\n        log.setBundleProgressBar(bar);\n      },\n      onProgressBuildBundle: (percent: number) => {\n        if (!bar || bar.complete) return;\n        const ticks = percent - bar.curr;\n        ticks > 0 && bar.tick(ticks);\n      },\n      onFinishBuildBundle: (err, startTime, endTime) => {\n        if (bar && !bar.complete) {\n          bar.tick(100 - bar.curr);\n        }\n\n        if (bar) {\n          log.setBundleProgressBar(null);\n          bar.terminate();\n          bar = null;\n\n          if (err) {\n            log(chalk.red('Failed building JavaScript bundle.'));\n          } else {\n            log(\n              chalk.green(\n                `Finished building JavaScript bundle in ${\n                  endTime.getTime() - startTime.getTime()\n                }ms.`\n              )\n            );\n          }\n        }\n      },\n      updateLogs: (updater: LogUpdater) => {\n        const newLogChunks = updater([]);\n        newLogChunks.forEach((newLogChunk: LogRecord) => {\n          if (newLogChunk.issueId && newLogChunk.issueCleared) {\n            return;\n          }\n          logWithLevel(newLogChunk);\n        });\n      },\n    });\n\n    // needed for validation logging to function\n    ProjectUtils.attachLoggerStream(projectDir, {\n      stream: {\n        write: (chunk: LogRecord) => {\n          if (chunk.tag === 'device') {\n            logWithLevel(chunk);\n          }\n        },\n      },\n      type: 'raw',\n    });\n\n    // The existing CLI modules only pass one argument to this function, so skipProjectValidation\n    // will be undefined in most cases. we can explicitly pass a truthy value here to avoid\n    // validation (eg for init)\n    //\n    // If the packager/manifest server is running and healthy, there is no need\n    // to rerun Doctor because the directory was already checked previously\n    // This is relevant for command such as `send`\n    if (options.checkConfig && (await Project.currentStatus(projectDir)) !== 'running') {\n      const spinner = ora('Making sure project is set up correctly...').start();\n      log.setSpinner(spinner);\n      // validate that this is a good projectDir before we try anything else\n\n      const status = await Doctor.validateWithoutNetworkAsync(projectDir, {\n        skipSDKVersionRequirement: options.skipSDKVersionRequirement,\n      });\n      if (status === Doctor.FATAL) {\n        throw new Error(`There is an error with your project. See above logs for information.`);\n      }\n      spinner.stop();\n      log.setSpinner(null);\n    }\n\n    // the existing CLI modules only pass one argument to this function, so skipProjectValidation\n    // will be undefined in most cases. we can explicitly pass a truthy value here to avoid validation (eg for init)\n\n    return asyncFn(projectDir, ...args);\n  });\n};\n\nfunction runAsync(programName: string) {\n  try {\n    // Setup analytics\n    Analytics.setSegmentNodeKey('vGu92cdmVaggGA26s3lBX6Y5fILm8SQ7');\n    Analytics.setVersionName(packageJSON.version);\n    _registerLogs();\n\n    UserManager.setInteractiveAuthenticationCallback(loginOrRegisterAsync);\n\n    if (process.env.SERVER_URL) {\n      let serverUrl = process.env.SERVER_URL;\n      if (!serverUrl.startsWith('http')) {\n        serverUrl = `http://${serverUrl}`;\n      }\n      const parsedUrl = url.parse(serverUrl);\n      const port = parseInt(parsedUrl.port || '', 10);\n      if (parsedUrl.hostname && port) {\n        Config.api.host = parsedUrl.hostname;\n        Config.api.port = port;\n      } else {\n        throw new Error('Environment variable SERVER_URL is not a valid url');\n      }\n    }\n\n    Config.developerTool = packageJSON.name;\n\n    // Setup our commander instance\n    program.name(programName);\n    program\n      .version(packageJSON.version)\n      .option('--non-interactive', 'Fail, if an interactive prompt would be required to continue.');\n\n    // Load each module found in ./commands by 'registering' it with our commander instance\n    registerCommands(program);\n\n    program.on('command:detach', () => {\n      log.warn('To eject your project to ExpoKit (previously \"detach\"), use `expo eject`.');\n      process.exit(0);\n    });\n\n    program.on('command:*', subCommand => {\n      let msg = `\"${subCommand}\" is not an expo command. See \"expo --help\" for the full list of commands.`;\n      const availableCommands = program.commands.map((cmd: Command) => cmd._name);\n      // finding the best match whose edit distance is less than 40% of their length.\n      const suggestion = availableCommands.find(\n        (commandName: string) => leven(commandName, subCommand[0]) < commandName.length * 0.4\n      );\n      if (suggestion) {\n        msg = `\"${subCommand}\" is not an expo command -- did you mean ${suggestion}?\\n See \"expo --help\" for the full list of commands.`;\n      }\n      log.warn(msg);\n    });\n\n    if (typeof program.nonInteractive === 'undefined') {\n      // Commander doesn't initialize boolean args with default values.\n      program.nonInteractive = !process.stdin.isTTY;\n    }\n\n    program.parse(process.argv);\n\n    // Show help when no sub-command specified\n    if (program.args.length === 0) {\n      program.help();\n    }\n  } catch (e) {\n    log.error(e);\n    throw e;\n  }\n}\n\nasync function checkCliVersionAsync() {\n  const { updateIsAvailable, current, latest, deprecated } = await update.checkForUpdateAsync();\n  if (updateIsAvailable) {\n    log.nestedWarn(\n      boxen(\n        chalk.green(`There is a new version of ${packageJSON.name} available (${latest}).\nYou are currently using ${packageJSON.name} ${current}\nInstall expo-cli globally using the package manager of your choice;\nfor example: \\`npm install -g ${packageJSON.name}\\` to get the latest version`),\n        { borderColor: 'green', padding: 1 }\n      )\n    );\n  }\n\n  if (deprecated) {\n    log.nestedWarn(\n      boxen(\n        chalk.red(\n          `This version of expo-cli is not supported anymore.\nIt's highly recommended to update to the newest version.\n\nThe API endpoints used in this version of expo-cli might not exist,\nany interaction with Expo servers may result in unexpected behaviour.`\n        ),\n        { borderColor: 'red', padding: 1 }\n      )\n    );\n  }\n}\n\nfunction _registerLogs() {\n  const stream = {\n    stream: {\n      write: (chunk: any) => {\n        if (chunk.code) {\n          switch (chunk.code) {\n            case NotificationCode.START_LOADING:\n              simpleSpinner.start();\n              return;\n            case NotificationCode.STOP_LOADING:\n              simpleSpinner.stop();\n              return;\n            case NotificationCode.DOWNLOAD_CLI_PROGRESS:\n              return;\n          }\n        }\n\n        if (chunk.level === bunyan.INFO) {\n          log(chunk.msg);\n        } else if (chunk.level === bunyan.WARN) {\n          log.warn(chunk.msg);\n        } else if (chunk.level >= bunyan.ERROR) {\n          log.error(chunk.msg);\n        }\n      },\n    },\n    type: 'raw',\n  };\n\n  Logger.notifications.addStream(stream);\n  Logger.global.addStream(stream);\n}\n\nasync function writePathAsync() {\n  const subCommand = process.argv[2];\n  if (subCommand === 'prepare-detached-build') {\n    // This is being run from Android Studio or Xcode. Don't want to write PATH in this case.\n    return;\n  }\n\n  await Binaries.writePathToUserSettingsAsync();\n}\n\n// This is the entry point of the CLI\nexport function run(programName: string) {\n  (async function () {\n    await Promise.all([writePathAsync(), runAsync(programName)]);\n  })().catch(e => {\n    log.error('Uncaught Error', e);\n    process.exit(1);\n  });\n}\n"],"file":"exp.js"}